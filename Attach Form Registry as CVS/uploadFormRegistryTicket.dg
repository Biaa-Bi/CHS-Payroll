string uploadFormRegistryTicket(map entry_form)
{
/**
 * uploadFormRegistryTicket.dg
 * 
 * Upload Form Registry to Ticket
 * Attach a registry in the form as a CVS to a ticket.
 * Input:
 *      (map) entry_form : A map that contains the values for the CVS file and the ticket found.
 * Output:
 *      (string) A completion message or an error message.
 */
// Change this to the value in ZOHO Desk > Settings > Developer Space > API > OrgId
org_id = 725793237;
// Change this to the name in the Flow Webhook Integration corresponding to the "Submitted By" email.
submitted_by = "Submitted_By";
// Change this to the name in the Flow Webhook Integration corresponding to the "Subject" field.
ticket_subject_API = "Subject";
// Change this to the value in ZOHO Desk > Settings > Customization > Layouts and Fields > Select "Tickets" > Select the Department > Select the Layout > Find field 'Ticket Creator' > Edit Properties > API Name
ticket_creator_api_name = "cf_ticket_creator";
// Searching the ticket
entry_form = entry_form.get("payload");
email = entry_form.get(submitted_by);
ticket_subject = entry_form.get(ticket_subject_API);
search_ticket = Map();
search_ticket.put("subject",ticket_subject);
search_ticket.put("status","${OPEN}");
//search_ticket.put("customField1",ticket_creator_api_name + ":" + email);
// Please update the desk connection name
ticket_response = zoho.desk.searchRecords(org_id,"Tickets",search_ticket,0,1,"desk");
if(ticket_response.get("data").isNull() || ticket_response.get("data").size() < 1)
{
    info "Error: " + ticket_response;
    return "Unable to find an Open ticket with subject: \"" + ticket_subject + "\"";
}
ticket_id = ticket_response.get("data").get("0").get("id");
info "Ticket ID: " + ticket_id;
// Creating the CVS file
titles_cvs = "";
values_cvs = "";
for each  key in entry_form.keys()
{
    values_cvs = values_cvs + "\"" + entry_form.get(key) + "\"" + ",";
    titles_cvs = titles_cvs + "\"" + key.replaceAll("_"," ") + "\"" + ",";
}
file_content = titles_cvs.removeLastOccurence(",") + "\n" + values_cvs.removeLastOccurence(",");
info file_content;
cvs_file = file_content.tofile("TicketCreator_Entry.csv");
info "Uploading the file";
info cvs_file;
cvs_file.setParamName("file");
params_map = Map();
params_map.put("isPublic","false");
params_map.put("Content-Type","multipart/form-data");
// Please update the desk connection name
response = invokeurl
[
    url :"https://desk.zoho.com/api/v1/tickets/" + ticket_id + "/attachments"
    type :POST
    parameters:params_map
    headers:{"orgId":org_id}
    files:cvs_file
    connection:"desk"
];
info response;
if(response.isNull())
{
    info "Successfully upload to the Ticket.";
}
else
{
    info "Error: ";
    info response;
    return "Error, couldn't upload the file.";
}
return "Successful";
}